name: List Languages

on:
  workflow_dispatch:

jobs:
  detect_language:
    runs-on: ubuntu-latest

    steps:
      - name: Detect repository language and set config file
        id: set_config
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: languages } = await github.rest.repos.listLanguages({
              owner: context.repo.owner,
              repo: context.repo.repo,
            });

            // Semgrep 규칙과 GitHub 언어 매핑
            const languageMap = {
              'java': 'java',
              'python': 'python',
              'javascript': 'javascript',
              'typeScript': 'typescript',
              'go': 'go',
              'php': 'php',
              'c++': 'cpp',
              'c#': 'csharp',
              'ruby': 'ruby',
            };
            
            let mainLanguage = null;
            let maxBytes = 0;
            for (const lang in languages) {
              if (languages[lang] > maxBytes) {
                maxBytes = languages[lang];
                mainLanguage = lang;
              }
            }

            // 일반 규칙을 기본으로 설정합니다.
            let configs = [];
            
            if (mainLanguage) {
              const semgrepLanguage = languageMap[mainLanguage.toLowerCase()];
              if (semgrepLanguage) {
                // 주 언어가 감지되면, 해당 언어 규칙을 추가합니다.
                configs.push(`semgrep_rules/semgrep_rules_general.yaml`);
                configs.push(`semgrep_rules/semgrep_rules_${semgrepLanguage}.yaml`);
                console.log(`주요 언어 '${mainLanguage}' 감지. 언어별 규칙을 추가합니다.`);
              } else {
                configs.push(`semgrep_rules/semgrep_rules.yaml`);
                console.log(`감지된 언어 '${mainLanguage}'에 대한 특정 규칙 파일이 없습니다. 기본 규칙 파일을 사용합니다.`);
              }
            } else {
              configs.push(`semgrep_rules/semgrep_rules.yaml`);
              console.log('리포지토리의 언어를 감지하지 못했습니다. 기본 규칙 파일을 사용합니다.');
            }
            
            core.setOutput('config_files', configs.join(','));

      - name: Copy specific Semgrep rule files
        run: |
          echo "필요한 규칙 파일 복사 완료: ${{ steps.set_config.outputs.config_files }}"
          CONFIG_FILES=$(echo "${{ steps.set_config.outputs.config_files }}" | tr ',' '\n')
          for FILE in $CONFIG_FILES; do
            # cp "/opt/cache/semgrep/$(basename $FILE)" "$FILE"
          done
